<?xml version="1.0" encoding="UTF-8"?>
<configuration monitorInterval="5">
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
    <Properties>
        <!-- 这里定义两个格式化输出格式，分别用于文件日志和控制台日志（带颜色）-->
        <!-- %date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
        <property name="LOG_PATTERN" value="%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger [%L] : %msg%n" />
        <!-- 定义日志存储的路径，不要配置相对路径 -->
        <property name="FILE_PATH" value="c:\logs" />
        <!--<property name="FILE_PATH" value="/Volumes/BOOTCAMP/log" />-->
        <!-- 定义日志归档压缩包名字，通常设置为项目名 -->
        <property name="FILE_NAME" value="test" />
    </Properties>

    <appenders>
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </console>

        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log" filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">
        <!--<RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log" filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd HH-mm-ss}_%i.log.gz">-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，根据当前filePattern配置 %{yyyy-MM-dd HH-mm-ss}-->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!--文件大小，当超过这个时，自动存档，压缩，并生成一个新的文件-->
                <SizeBasedTriggeringPolicy size="200MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>
    </appenders>

    <loggers>
        <!-- root是根目录，记录输出level等级 -->
        <!--
            logger是单独用来指定日志的形式
            name: 指定输出日志的路
            additivity: 输出日志是否追加在 root根目录下， 默认true(使用默认就好)，
                1.如果false则只会在自己的appender中输出，不会在父logger中输出，如果appender没有，则不会输出
                2.指定 appender-ref ,如果指定，并且会处理他们的
            appender-ref: 具体要输出的地方，可以指定
         -->
        <root level="info">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
        </root>
        <logger name="com.example.demo.mapper" level="debug" additivity="true">
            <!--如果不指定appender的话，则输出到所有-->
            <!--<appender-ref ref="RollingFileInfo"/>-->
        </logger>
    </loggers>

</configuration>